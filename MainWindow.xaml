<Window x:Class="DesktopShortcutManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        
        xmlns:local="clr-namespace:DesktopShortcutManager"
        xmlns:models="clr-namespace:DesktopShortcutManager.Models"
        xmlns:services="clr-namespace:DesktopShortcutManager.Services"
        xmlns:converters="clr-namespace:DesktopShortcutManager.Converters"
        xmlns:utils="clr-namespace:DesktopShortcutManager.Utils"
        
        xmlns:gong="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        
        mc:Ignorable="d"
        
        Title="Shortcut Dock" 
        Height="{Binding Source={x:Static services:SettingsService.Instance}, Path=CurrentSettings.Height, Mode=TwoWay}" 
        Width="{Binding Source={x:Static services:SettingsService.Instance}, Path=CurrentSettings.Width, Mode=TwoWay}"
        Top="{Binding Source={x:Static services:SettingsService.Instance}, Path=CurrentSettings.Top, Mode=TwoWay}"
        Left="{Binding Source={x:Static services:SettingsService.Instance}, Path=CurrentSettings.Left, Mode=TwoWay}"
        MinWidth="200" 
        MinHeight="300"
        
        AllowsTransparency="True" 
        WindowStyle="None" 
        Background="Transparent"
        WindowStartupLocation="Manual"
        ShowInTaskbar="False"
        AllowDrop="True"
        FontFamily="Segoe UI Variable, Segoe UI">
    <Window.Style>
        <Style TargetType="Window">
            <!-- 默认状态：可调整大小，可拖动 -->
            <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome ResizeBorderThickness="10" 
                                  CaptionHeight="40" 
                                  CornerRadius="0" 
                                  GlassFrameThickness="1"
                                  UseAeroCaptionButtons="False"/>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <!-- 当锁定为True时 -->
                <DataTrigger Binding="{Binding Source={x:Static services:SettingsService.Instance}, Path=CurrentSettings.IsLocked}" Value="True">
                    <!-- 禁用调整大小 -->
                    <Setter Property="ResizeMode" Value="NoResize"/>
                    <!-- 禁用 WindowChrome 的原生拖动 -->
                    <Setter Property="WindowChrome.WindowChrome">
                        <Setter.Value>
                            <WindowChrome ResizeBorderThickness="0" 
                                          CaptionHeight="0" 
                                          CornerRadius="0" 
                                          GlassFrameThickness="0"
                                          UseAeroCaptionButtons="False"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>

    <Window.Resources>
        <!-- Colors (from your version) -->
        <Color x:Key="PrimaryColor">#2C3E50</Color>
        <SolidColorBrush x:Key="PrimaryColorBrush" Color="{StaticResource PrimaryColor}"/>
        <Color x:Key="AccentColor">#3498DB</Color>
        <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource AccentColor}"/>

        <!-- Converters -->
        <converters:BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
        <converters:InvertBoolConverter x:Key="InvertBoolConverter"/>
        <converters:PercentageToOpacityConverter x:Key="PercentageToOpacity"/>
        <converters:SizeToContainerConverter x:Key="SizeToContainerConverter"/>
        <converters:SizeToFontConverter x:Key="SizeToFontConverter"/>

        <!-- Binding Proxy -->
        <utils:BindingProxy x:Key="Proxy" Data="{Binding}"/>

        <!-- Data Template with Animation -->
        <DataTemplate x:Key="ShortcutGridItemTemplate">
            <Border DataContext="{Binding}" ToolTip="{Binding Path}" CornerRadius="8" Padding="8" Margin="4"
                    Width="{Binding Source={x:Static services:SettingsService.Instance}, Path=CurrentSettings.IconSize, Converter={StaticResource SizeToContainerConverter}}"
                    Height="{Binding Source={x:Static services:SettingsService.Instance}, Path=CurrentSettings.IconSize, Converter={StaticResource SizeToContainerConverter}}"
                    MouseLeftButtonUp="Shortcut_MouseLeftButtonUp">
                <Border.InputBindings>
                    <MouseBinding MouseAction="LeftDoubleClick" 
                                  Command="{Binding Source={StaticResource Proxy}, Path=Data.LaunchShortcutCommand}"
                                  CommandParameter="{Binding}"/>
                </Border.InputBindings>
                <Border.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="重命名" Command="{Binding Source={StaticResource Proxy}, Path=Data.RenameCommand}" CommandParameter="{Binding}"/>
                        <MenuItem Header="在文件管理器中显示" Command="{Binding Source={StaticResource Proxy}, Path=Data.ShowInExplorerCommand}" CommandParameter="{Binding}"/>
                        <Separator />
                        <MenuItem Header="删除" Command="{Binding Source={StaticResource Proxy}, Path=Data.DeleteShortcutCommand}" CommandParameter="{Binding}"/>
                    </ContextMenu>
                </Border.ContextMenu>
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="Transparent"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="0" Opacity="0" />
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#20000000" Duration="0:0:0.2"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Effect">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <DropShadowEffect BlurRadius="8" Opacity="0.2" Color="#000000"/>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="Transparent" Duration="0:0:0.2"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Effect">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <DropShadowEffect BlurRadius="0" Opacity="0" />
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Image Source="{Binding Icon}" 
                           Width="{Binding Source={x:Static services:SettingsService.Instance}, Path=CurrentSettings.IconSize}"
                           Height="{Binding Source={x:Static services:SettingsService.Instance}, Path=CurrentSettings.IconSize}" Margin="5"/>
                    <TextBlock Text="{Binding Name}" TextAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" ToolTip="{Binding Name}"
                               FontSize="{Binding Source={x:Static services:SettingsService.Instance}, Path=CurrentSettings.IconSize, Converter={StaticResource SizeToFontConverter}}"
                               Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibility}, ConverterParameter=Invert}"/>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=LostFocus}" TextAlignment="Center" AcceptsReturn="False"
                             FontSize="{Binding Source={x:Static services:SettingsService.Instance}, Path=CurrentSettings.IconSize, Converter={StaticResource SizeToFontConverter}}"
                             Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibility}}" KeyDown="EditableTextBox_KeyDown">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Escape" Command="{Binding Source={StaticResource Proxy}, Path=Data.EndEditingCommand}" CommandParameter="{Binding}"/>
                        </TextBox.InputBindings>
                    </TextBox>
                </StackPanel>
            </Border>
        </DataTemplate>

    </Window.Resources>
    <Border BorderBrush="#D1D8E0" BorderThickness="1" CornerRadius="8" Background="#F3F6F9">
        <Border.Effect>
            <DropShadowEffect ShadowDepth="0" BlurRadius="15" Color="#000" Opacity="0.2"/>
        </Border.Effect>
        <Grid>
            <!-- 👇 核心修正：TaskbarIcon 现在位于 Grid 内部，并且在所有属性元素之后 👇 -->

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- System Tray Icon (non-visual element) -->
            <tb:TaskbarIcon Grid.Row="0" IconSource="/Assets/settings.ico" ToolTipText="Desktop Shortcut Manager">
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="退出" Click="TrayExit_Click"/>
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>
            <!-- 核心修正：Top Bar (自定义标题栏) -->
            <Border Grid.Row="0" Background="#E6FFFFFF" CornerRadius="8,8,0,0"
                    BorderBrush="#E0E6EC" BorderThickness="0,0,0,1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Border Grid.Column="0" Background="Transparent" x:Name="DragHandle"
                            MouseLeftButtonDown="DragHandle_MouseLeftButtonDown" Cursor="SizeAll"/>

                    <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="5">
                        <ToggleButton x:Name="LockButton" Width="30" Height="30" ToolTip="锁定/解锁窗口位置" Cursor="Hand"
                                      WindowChrome.IsHitTestVisibleInChrome="True" 
                                      IsChecked="{Binding Source={x:Static services:SettingsService.Instance}, Path=CurrentSettings.IsLocked, Mode=TwoWay}">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Image Source="/Assets/unlock.png" Width="16" Height="16"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Image Source="/Assets/lock.png" Width="16" Height="16"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Button x:Name="SettingsButton" Width="30" Height="30" 
                                ToolTip="打开设置" Click="SettingsButton_Click" Background="Transparent" 
                                BorderBrush="Transparent" Cursor="Hand"
                                WindowChrome.IsHitTestVisibleInChrome="True">
                            <Image Source="/Assets/settings.ico" Width="16" Height="16" />
                        </Button>
                        <Button x:Name="CloseButton" Width="30" Height="30" ToolTip="关闭" 
                                Click="CloseButton_Click" Background="Transparent" BorderBrush="Transparent" 
                                Cursor="Hand"
                                WindowChrome.IsHitTestVisibleInChrome="True">
                            <Image Source="/Assets/close.png" Width="16" Height="16" />
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>
            <!-- Main Content Area -->
            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                <ItemsControl ItemsSource="{Binding Drawers}"
                          gong:DragDrop.IsDragSource="True"
                          gong:DragDrop.IsDropTarget="True"
                          gong:DragDrop.DropHandler="{Binding}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:Drawer}">
                            <Border x:Name="DrawerBorder" BorderBrush="Transparent" BorderThickness="2" CornerRadius="4" Margin="5">
                                <StackPanel>
                                    <ToggleButton IsChecked="{Binding IsExpanded, Mode=TwoWay}"
                                              HorizontalContentAlignment="Stretch" BorderThickness="0" Background="Transparent">
                                        <ToggleButton.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="重命名" Command="{Binding Source={StaticResource Proxy}, Path=Data.RenameCommand}" CommandParameter="{Binding}"/>
                                                <Separator/>
                                                <MenuItem Header="删除抽屉" Command="{Binding Source={StaticResource Proxy}, Path=Data.DeleteDrawerCommand}" CommandParameter="{Binding}"/>
                                            </ContextMenu>
                                        </ToggleButton.ContextMenu>
                                        <Grid>
                                            <TextBlock Text="{Binding Name}" FontWeight="Bold" FontSize="16" Foreground="#333" Margin="5"
                                                   Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibility}, ConverterParameter=Invert}"/>
                                            <TextBox Text="{Binding Name, UpdateSourceTrigger=LostFocus}" FontSize="16" FontWeight="Bold"
                                                 Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibility}}" KeyDown="EditableTextBox_KeyDown">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Escape" Command="{Binding Source={StaticResource Proxy}, Path=Data.EndEditingCommand}" CommandParameter="{Binding}"/>
                                                </TextBox.InputBindings>
                                            </TextBox>
                                            <TextBlock Text="▼" FontSize="12" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Right">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                                                        <Setter Property="RenderTransform">
                                                            <Setter.Value>
                                                                <RotateTransform Angle="0"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsExpanded}" Value="False">
                                                                <Setter Property="RenderTransform">
                                                                    <Setter.Value>
                                                                        <RotateTransform Angle="-90"/>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </ToggleButton>
                                    <Border BorderBrush="#CCC" BorderThickness="0,0,0,1" Margin="5,0"/>
                                    <ItemsControl ItemsSource="{Binding Items}"
                                              Visibility="{Binding IsExpanded, Converter={StaticResource BoolToVisibility}}"
                                              gong:DragDrop.IsDragSource="True"
                                              gong:DragDrop.IsDropTarget="True"
                                              gong:DragDrop.DropHandler="{Binding}"
                                              ItemTemplate="{StaticResource ShortcutGridItemTemplate}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </StackPanel>
                            </Border>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsDropTarget}" Value="True">
                                    <Setter TargetName="DrawerBorder" Property="BorderBrush" Value="{StaticResource AccentColorBrush}"/>
                                    <Setter TargetName="DrawerBorder" Property="Background" Value="#203498DB"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>

            <!-- Bottom Bar -->
            <Border Grid.Row="2" BorderBrush="#CCC" BorderThickness="0,1,0,0" Padding="5">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" x:Name="NewDrawerNameTextBox" VerticalContentAlignment="Center" KeyDown="NewDrawerNameTextBox_KeyDown" ToolTip="输入新抽屉的名称后按回车或点击按钮"/>
                    <Button Grid.Column="1" Content="+添加抽屉" Margin="5,0,0,0" Click="AddDrawer_Click"/>
                </Grid>
            </Border>
        </Grid>
    </Border>
</Window>