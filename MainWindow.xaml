<Window x:Class="DesktopShortcutManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DesktopShortcutManager"
        xmlns:gong="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        mc:Ignorable="d"
        
        Title="Shortcut Dock" 
        Height="700" 
        Width="280"
        MinWidth="200" 
        MinHeight="300"
        
        AllowsTransparency="True" 
        WindowStyle="None" 
        Background="Transparent"
        ResizeMode="CanResizeWithGrip"
        WindowStartupLocation="CenterScreen"
        
        AllowDrop="True">

    <Window.Resources>
        <local:BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
        <local:InvertBoolConverter x:Key="InvertBoolConverter"/>
        <local:PercentageToOpacityConverter x:Key="PercentageToOpacity"/>
        <local:BindingProxy x:Key="Proxy" Data="{Binding}"/>
    </Window.Resources>

    <Border BorderBrush="#444" BorderThickness="1" CornerRadius="8" Background="#FFECECEC">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Top Bar -->
            <Border Grid.Row="0" x:Name="DragHandle" Background="#D0FFFFFF" CornerRadius="8,8,0,0"
                    MouseLeftButtonDown="DragHandle_MouseLeftButtonDown" Cursor="SizeAll">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">
                    <ToggleButton x:Name="LockButton" Width="30" Height="30" 
                                  ToolTip="锁定/解锁窗口位置"
                                  IsChecked="{Binding Source={x:Static local:SettingsService.Instance}, Path=CurrentSettings.IsLocked, Mode=TwoWay}">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Content" Value="🔓"/>
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Content" Value="🔒"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <Button x:Name="SettingsButton" Content="⚙️" Width="30" Height="30" 
                            ToolTip="打开设置" Click="SettingsButton_Click" Background="Transparent" BorderBrush="Transparent"/>
                    <Button x:Name="CloseButton" Content="✕" Width="30" Height="30" 
                            Background="Transparent" BorderBrush="Transparent" Foreground="Red" FontWeight="Bold"
                            Click="CloseButton_Click" ToolTip="Close"/>
                </StackPanel>
            </Border>

            <!-- Main Content Area -->
            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                <ItemsControl ItemsSource="{Binding Drawers}"
                              gong:DragDrop.IsDragSource="True"
                              gong:DragDrop.IsDropTarget="True"
                              gong:DragDrop.DropHandler="{Binding}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border x:Name="DrawerBorder" BorderBrush="Transparent" BorderThickness="2" CornerRadius="4" Margin="5">
                                <StackPanel>
                                    <ToggleButton IsChecked="{Binding IsExpanded, Mode=TwoWay}"
                                                  HorizontalContentAlignment="Stretch" BorderThickness="0" Background="Transparent">
                                        <ToggleButton.ContextMenu>
                                            <ContextMenu>
                                                <!-- 👇 核心修正第二步：通过“桥梁”来绑定命令 👇 -->
                                                <MenuItem Header="重命名" Command="{Binding Source={StaticResource Proxy}, Path=Data.RenameCommand}" CommandParameter="{Binding}"/>
                                                <Separator/>
                                                <MenuItem Header="删除抽屉" Command="{Binding Source={StaticResource Proxy}, Path=Data.DeleteDrawerCommand}" CommandParameter="{Binding}"/>
                                            </ContextMenu>
                                        </ToggleButton.ContextMenu>
                                        <Grid>
                                            <TextBlock Text="{Binding Name}" FontWeight="Bold" FontSize="16" Foreground="#333" Margin="5"
                                                       Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibility}, ConverterParameter=Invert}"/>
                                            <TextBox Text="{Binding Name, UpdateSourceTrigger=LostFocus}" FontSize="16" FontWeight="Bold"
                                                     Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibility}}" KeyDown="EditableTextBox_KeyDown">
                                                <TextBox.InputBindings>
                                                    <KeyBinding Key="Escape" Command="{Binding DataContext.EndEditingCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}"/>
                                                </TextBox.InputBindings>
                                            </TextBox>
                                            <TextBlock Text="▼" FontSize="12" Margin="5" VerticalAlignment="Center" HorizontalAlignment="Right">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                                                        <Setter Property="RenderTransform">
                                                            <Setter.Value>
                                                                <RotateTransform Angle="0"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsExpanded}" Value="False">
                                                                <Setter Property="RenderTransform">
                                                                    <Setter.Value>
                                                                        <RotateTransform Angle="-90"/>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </ToggleButton>
                                    <Border BorderBrush="#CCC" BorderThickness="0,0,0,1" Margin="5,0"/>
                                    <ItemsControl ItemsSource="{Binding Items}"
                                                  Visibility="{Binding IsExpanded, Converter={StaticResource BoolToVisibility}}"
                                                  gong:DragDrop.IsDragSource="True"
                                                  gong:DragDrop.IsDropTarget="True"
                                                  gong:DragDrop.DropHandler="{Binding}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Border Tag="{Binding}" ToolTip="{Binding Path}" CornerRadius="4" Padding="5"
                                                        MouseLeftButtonUp="Shortcut_MouseLeftButtonUp">
                                                    <Border.InputBindings>
                                                        <MouseBinding MouseAction="LeftDoubleClick" 
                                                                      Command="{Binding DataContext.LaunchShortcutCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                                      CommandParameter="{Binding}"/>
                                                    </Border.InputBindings>
                                                    <Border.Style>
                                                        <Style TargetType="Border">
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" Value="#20000000"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Border.ContextMenu>
                                                        <ContextMenu>
                                                            <!-- 👇 核心修正第二步：通过“桥梁”来绑定命令 👇 -->
                                                            <MenuItem Header="重命名" Command="{Binding Source={StaticResource Proxy}, Path=Data.RenameCommand}" CommandParameter="{Binding}"/>
                                                            <MenuItem Header="在文件管理器中显示" Command="{Binding Source={StaticResource Proxy}, Path=Data.ShowInExplorerCommand}" CommandParameter="{Binding}"/>
                                                            <Separator />
                                                            <MenuItem Header="删除" Command="{Binding Source={StaticResource Proxy}, Path=Data.DeleteShortcutCommand}" CommandParameter="{Binding}"/>
                                                        </ContextMenu>
                                                    </Border.ContextMenu>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Image Grid.Column="0" Source="{Binding Icon}" Width="24" Height="24" Margin="10,0,5,0" VerticalAlignment="Center"/>
                                                        <TextBlock Grid.Column="1" Text="{Binding Name}" Margin="5,0" FontSize="14" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"
                                                                   Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibility}, ConverterParameter=Invert}"/>
                                                        <TextBox Grid.Column="1" Text="{Binding Name, UpdateSourceTrigger=LostFocus}" FontSize="14"
                                                                 Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibility}}" KeyDown="EditableTextBox_KeyDown">
                                                            <TextBox.InputBindings>
                                                                <KeyBinding Key="Escape" Command="{Binding DataContext.EndEditingCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}"/>
                                                            </TextBox.InputBindings>
                                                        </TextBox>
                                                        <Button Grid.Column="2" x:Name="DeleteButton" Content="🗑️" Tag="{Binding}" Click="DeleteShortcut_Click"
                                                                Width="25" Height="25" Margin="0,0,5,0" BorderThickness="0" Background="Transparent" Visibility="Hidden"/>
                                                    </Grid>
                                                </Border>
                                                <DataTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="DeleteButton" Property="Visibility" Value="Visible"/>
                                                    </Trigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                            </Border>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsDropTarget}" Value="True">
                                    <Setter TargetName="DrawerBorder" Property="BorderBrush" Value="DodgerBlue"/>
                                    <Setter TargetName="DrawerBorder" Property="Background" Value="#201E90FF"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>

            <!-- Bottom Bar -->
            <Border Grid.Row="2" BorderBrush="#CCC" BorderThickness="0,1,0,0" Padding="5">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" x:Name="NewDrawerNameTextBox" VerticalContentAlignment="Center" KeyDown="NewDrawerNameTextBox_KeyDown" ToolTip="输入新抽屉的名称后按回车或点击按钮"/>
                    <Button Grid.Column="1" Content="➕ 添加抽屉" Margin="5,0,0,0" Click="AddDrawer_Click"/>
                </Grid>
            </Border>
        </Grid>
    </Border>
</Window>